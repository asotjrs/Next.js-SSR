{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mahmoud\\\\Desktop\\\\Next.js-SSR\\\\pages\\\\robots.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch';\n\nvar Robots = function Robots(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 10\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, \"Robots\"), __jsx(Link, {\n    href: '/',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 24\n    }\n  }, \"Home\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.robots.map(function (robot) {\n    return __jsx(\"li\", {\n      key: robot.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 22\n      }\n    }, __jsx(Link, {\n      href: '/robots/' + robot.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 19\n      }\n    }, \" \", __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 53\n      }\n    }, robot.name), \" \"), robot.name);\n  })));\n};\n\n_c = Robots;\nRobots.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"sources":["C:/Users/mahmoud/Desktop/Next.js-SSR/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","name","getInitialProps","res","json","data"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAC,SAAPA,MAAO,CAACC,KAAD,EAAS;AACpB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,EAEH,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK,EAAE;AACrB,WAAO;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,aAAWD,KAAK,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,IAAV,CAAlC,MADG,EAEFF,KAAK,CAACE,IAFJ,CAAP;AAMH,GAPA,CADL,CAHG,CAAP;AAiBD,CAlBD;;KAAMN,M;AAmBNA,MAAM,CAACO,eAAP,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLR,KAAK,CAAC,4CAAD,CADA;;AAAA;AACfS,UAAAA,GADe;AAAA;AAAA,iBAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEfC,UAAAA,IAFe;AAAA,2CAGd;AACHR,YAAAA,MAAM,EAACQ;AADJ,WAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAQA,eAAeV,MAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Robots=(props)=>{\r\n  return <div>\r\n      <h1>Robots</h1>\r\n      <Link href={'/'}><button>Home</button></Link>\r\n      <div>\r\n          {props.robots.map(robot=>{\r\n              return <li key={robot.id}>\r\n                  <Link href={'/robots/'+robot.id}> <a>{robot.name}</a> </Link>\r\n                  {robot.name}\r\n\r\n              </li>\r\n\r\n          })}\r\n\r\n      </div>\r\n  </div>\r\n\r\n\r\n};\r\nRobots.getInitialProps=async function () {\r\n  const res=await fetch('https://jsonplaceholder.typicode.com/users');\r\n  const data=await res.json();\r\n  return {\r\n      robots:data\r\n  }\r\n    \r\n};\r\nexport default Robots;"]},"metadata":{},"sourceType":"module"}