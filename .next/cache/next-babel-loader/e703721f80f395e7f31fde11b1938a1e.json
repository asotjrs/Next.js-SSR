{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahmoud\\\\Desktop\\\\Next.js-SSR\\\\pages\\\\robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 10\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, \"Robots\"), __jsx(Link, {\n    href: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 24\n    }\n  }, \"Home\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.robots.map(robot => {\n    return __jsx(\"li\", {\n      key: robot.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 22\n      }\n    }, __jsx(Link, {\n      href: 'robots/' + robot.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 19\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 23\n      }\n    }, robot.name)));\n  })));\n};\n\nRobots.getInitialProps = async function () {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["C:/Users/mahmoud/Desktop/Next.js-SSR/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","name","getInitialProps","res","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAEC,KAAD,IAAS;AACpB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,EAEH,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAE;AACrB,WAAO;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,YAAUD,KAAK,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,IAAV,CADJ,CADG,CAAP;AAOH,GARA,CADL,CAHG,CAAP;AAkBD,CAnBD;;AAoBAN,MAAM,CAACO,eAAP,GAAuB,kBAAkB;AACvC,QAAMC,GAAG,GAAC,MAAMT,KAAK,CAAC,4CAAD,CAArB;AACA,QAAMU,IAAI,GAAC,MAAMD,GAAG,CAACE,IAAJ,EAAjB;AACA,SAAO;AACHR,IAAAA,MAAM,EAACO;AADJ,GAAP;AAID,CAPD;;AAQA,eAAeT,MAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Robots=(props)=>{\r\n  return <div>\r\n      <h1>Robots</h1>\r\n      <Link href={'/'}><button>Home</button></Link>\r\n      <div>\r\n          {props.robots.map(robot=>{\r\n              return <li key={robot.id}>\r\n                  <Link href={'robots/'+robot.id}>\r\n                      <a>{robot.name}</a>\r\n                  </Link>\r\n\r\n              </li>\r\n\r\n          })}\r\n\r\n      </div>\r\n  </div>\r\n\r\n\r\n};\r\nRobots.getInitialProps=async function () {\r\n  const res=await fetch('https://jsonplaceholder.typicode.com/users');\r\n  const data=await res.json();\r\n  return {\r\n      robots:data\r\n  }\r\n    \r\n};\r\nexport default Robots;"]},"metadata":{},"sourceType":"module"}